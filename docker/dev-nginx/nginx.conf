# nginx config file on the host
# tls: https://mozilla.github.io/server-side-tls/ssl-config-generator/

# useful modules?
# - https://github.com/vozlt/nginx-module-vts


user nginx;

# 'auto' attempts to auto detect the number of CPU cores.
worker_processes auto;

# Run nginx in the foreground.
# (We run nginx via Docker, and by default the nginx command exits directly (because it
# starts nginx as a background daemon) which makes the docker container exits, and then
# the background daemon stops too.)
daemon off;

events {
  # in the Docker image, `ulimit -n` â€“> 524288, and say 10 cores? -> max 52400, say 30 000 then
  worker_connections 30000;
}


http {
  include  /etc/nginx/mime.types;
  default_type  application/octet-stream;

  server_tokens off;
  sendfile on;
  sendfile_max_chunk 2m;
  tcp_nopush on; # if off, then like 14 100 req/sec instead of like 15 300, for 1kb image.

  # We don't require so very lower latency on every packet sent.
  # And John Nagle says it's not needed? https://news.ycombinator.com/item?id=9045125
  tcp_nodelay off;

  # This makes things slower: 14 600 req/sec instead of like 15 300, for 1kb image.
  # aio threads;

  keepalive_timeout  65;


  # ----- HTTPS

  # Note: You should disable gzip for SSL traffic. [kajmagnus: I don't want to disable it. Instead,
  #   don't echo back too private stuff in responses]
  # See: https://bugs.debian.org/773332
  #
  # Read up on ssl_ciphers to ensure a secure configuration.
  # See: https://bugs.debian.org/765782

  ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;
  ssl_ciphers AES256+EECDH:AES256+EDH:!aNULL;
  # Key files referenced from sites-available/*.conf, not from here.


  # ----- Logging

  log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

  access_log  /var/log/nginx/access.log  main;

  error_log /var/log/nginx/error.log debug;
  error_page 502 /502.html;


  # ----- Reverse proxy cache

  proxy_cache_path /opt/nginx/proxy-cache levels=1:2 keys_zone=EfDiCache:8m max_size=1000m inactive=600m;
  proxy_temp_path /opt/nginx/proxy-temp;


  # ----- WebSocket and Long Polling

  # 32 m is the default, seems a little bit low?
  nchan_max_reserved_memory 64m;

  # The appserver posts to this endpoint to publish WebSocket etc events.
  # Port 81 should be blocked, should not be accessible from the publ intrernet.
  #
  server {
    listen 81;  # [47BKFG2] in PubSub.scala
    location ~ /-/pubsub/publish/(.*)$ {
      nchan_publisher;
      nchan_channel_id "$1";
      nchan_channel_id_split_delimiter ",";
    }
  }


  # ----- Virtual hosts

  # They all listen on port 80 and 443.

  # Default virtual host.
  server {
    server_name _;
    include /etc/nginx/vhost.conf;
  }

  include /etc/nginx/sites-enabled/*.conf;

}

# vim: et ts=2 sw=2 tw=0 list
