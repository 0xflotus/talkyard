# Play Framework application configuration file.


# Addresses
# =======================

debiki.port=80
debiki.hostname=${?HOSTNAME}
debiki.createSiteHostname=${?CREATE_SITE_HOSTNAME}

debiki.becomeOwnerEmailAddress=${?BECOME_OWNER_EMAIL_ADDRESS}


# Security
# =======================

# Secret key.
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
play.crypto.secret="public"

debiki.secure=false
debiki.newSite.quotaLimitMegabytes=100
debiki.securityComplaintsEmailAddress=""

debiki.e2eTestPassword="public"
debiki.forbiddenPassword="public"

ed.superAdmin.siteId="1"
ed.superAdmin.hostname="site-1.localhost"
ed.superAdmin.emailAddresses="superadmin@example.com"


# Other servers
# =======================

debiki.redis.host="cache"
debiki.nginx.host="web"

debiki.postgresql.host="rdb"
debiki.postgresql.port="5432"
debiki.postgresql.database="ed"
debiki.postgresql.user="ed"
debiki.postgresql.password="public"

# Test code is currently hardwired to database and user "debiki_test",
# password "auto-deleted", on localhost.


# Miscellaneous
# =======================

debiki.uploads.localhostDir="/opt/ed/uploads/"
debiki.uploads.maxKiloBytes=100111222


# The default is 100KB.
play.http.parser.maxMemoryBuffer=100000
play.http.parser.maxDiskBuffer=100113k  # why 113? oh well


# The application languages.
play.i18n.langs="en"

# Client cache expiration.
# See scripts/bump-assets-version.sh, which bumps a version number included
# in the URL path to JS and CSS files. The version number is bumped on
# deployment, so browsers download new file versions.
# ('s-maxage = ...' and 'public' are for shared proxies and CDNs)
assets.defaultCache="max-age=31536000, s-maxage=31536000, public" # 1 year

trustxforwarded=true


# Authentication
# =======================

# To enable OpenAuth, copy these settings to ../conf/somewhere.yaml ?  and
# fill in the clientID:s and clientSecret:s.

silhouette {

  # Facebook provider
  facebook.authorizationURL="https://graph.facebook.com/oauth/authorize"
  facebook.accessTokenURL="https://graph.facebook.com/oauth/access_token"
  facebook.redirectURL="http://localhost:9000/authenticate/facebook"
  #facebook.clientID=""
  #facebook.clientSecret=""
  facebook.scope="email"

  # Google provider
  google.authorizationURL="https://accounts.google.com/o/oauth2/auth"
  google.accessTokenURL="https://accounts.google.com/o/oauth2/token"
  google.redirectURL="http://localhost:9000/authenticate/google"
  #google.clientID=""
  #google.clientSecret=""
  google.scope="profile email"

  # Twitter provider
  twitter.requestTokenURL="https://twitter.com/oauth/request_token"
  twitter.accessTokenURL="https://twitter.com/oauth/access_token"
  twitter.authorizationURL="https://twitter.com/oauth/authenticate"
  twitter.callbackURL="http://localhost:9000/authenticate/twitter"
  #twitter.consumerKey=""
  #twitter.consumerSecret=""

  # GitHub
  github.authorizationURL="https://github.com/login/oauth/authorize"
  github.accessTokenURL="https://github.com/login/oauth/access_token"
  #github.clientID="…"
  #github.clientSecret="…"
  github.scope="user:email"

}


# Testing
# ------------------

debiki.e2eTestPassword=${?E2E_TEST_PASSWORD}
debiki.forbiddenPassword=${?FORBIDDEN_PASSWORD}


# ElasticSearch logging
# =======================

# About logging: "When embedded, elasticsearch does not configure logging, it
# uses whatever logging system you use (slf4j, log4, jul). You should configure
# logging however you like (and the logging component names will start with
# org.elasticsearch)."
# Source: http://elasticsearch-users.115913.n3.nabble.com/Change-log-level-with-embedded-java-td2850255.html
# So have a look at  logger.xml  and prod-logger.xml  instead.
#
# Here's another email thread: "How to set up Search Slow Log for embedded ES"
# At: https://groups.google.com/forum/#!topic/elasticsearch/Ecki9SSrwOM

include "override.conf"
