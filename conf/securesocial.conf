# SecureSocial 2 Settings.

smtp {
	host=email-smtp.us-east-1.amazonaws.com
	port=25
	ssl=true
	# Credentials for AWS SES user `ses-smtp-user-2013-01-05':
	# (I'll have to delete that user and create another one later since I've
	# committed the password to the Git repo.)
	user="AKIAIAAI75S5OJAX435Q"
	password="Aj8VXGQWCHNG5ZgWqjNtPZt094BRzN6bEEyjMHkofxPo"
	from="support@debiki.se"
}

securesocial {

	# Where to redirect the user if SecureSocial can't figure that out from
	# the request that led the use to the login page
	onLoginGoTo=/

	# Where to redirect the user when he logs out. If not set SecureSocial
	# will redirect to the login page
	onLogoutGoTo=/login

	# Enable SSL for oauth callback urls and login/signup/password recovery pages
	ssl=false

	twitter {
		requestTokenUrl="https://twitter.com/oauth/request_token"
		accessTokenUrl="https://twitter.com/oauth/access_token"
		authorizationUrl="https://twitter.com/oauth/authenticate"
		# From: Debiki Login 1
		# See: ~/debiki/accounts.txt
		# (I'll have to generate new key/secret later on since I've
		# published this one to the Git repo.)
		consumerKey=hePJD2aYueJVzpv1uJpg
		consumerSecret=EbSNO2WIkOcLbB3lMk2pnjLvlJfOjXvhJVLPbFGj2fw
	}

	facebook {
		authorizationUrl="https://graph.facebook.com/oauth/authorize"
		accessTokenUrl="https://graph.facebook.com/oauth/access_token"
		clientId=your_client_id
		clientSecret=your_client_secret
		# this scope is the minimum SecureSocial requires.  You can add more if required by your app.
		scope=email
	}

	google {
		authorizationUrl="https://accounts.google.com/o/oauth2/auth"
		accessTokenUrl="https://accounts.google.com/o/oauth2/token"
		clientId=your_client_id
		clientSecret=your_client_secret
		scope="https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email"
	}

	linkedin {
		requestTokenUrl="https://api.linkedin.com/uas/oauth/requestToken"
		accessTokenUrl="https://api.linkedin.com/uas/oauth/accessToken"
		authorizationUrl="https://api.linkedin.com/uas/oauth/authenticate"
		consumerKey=your_consumer_key
		consumerSecret=your_consumer_secret
	}
    	
	github {
		authorizationUrl="https://github.com/login/oauth/authorize"
		accessTokenUrl="https://github.com/login/oauth/access_token"
		clientId=your_client_id
		clientSecret=your_client_secret
	}

	userpass {
		# Enable username support, otherwise SecureSocial will use the emails as user names
		withUserNameSupport=false
		sendWelcomeEmail=true
		enableGravatarSupport=true
		tokenDuration=60
		tokenDeleteInterval=5
	}
}
