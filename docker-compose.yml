version: '2'
services:
  # rename to web? or, http?
  nginx:
    mem_limit: 200M
    build: docker/nginx/
    image: debiki/ed-nginx
    command: nginx
    volumes:
      - ./docker/data/uploads/:/opt/ed/uploads/:ro
      - ./docker/data/letsencrypt/:/etc/letsencrypt/:ro
    ports:
      # Don't expose port 81 (for publishing WebSocket events)  — it should be reachable only
      # from inside the Docker network.
      - '80:80'
      - '443:443'
    depends_on:
      - play

  # rename to app?
  play:
    mem_limit: 2600M
    build: docker/play-dev/
    # image debiki/ed-play instead created and tagged by docker/build-play-prod.sh.
    stdin_open: true  # otherwise Play exits
    volumes:
      - ./:/opt/ed/play/
      - ./docker/data/uploads/:/opt/ed/uploads/
      # Without this it takes forever to start because sbt would always download all dependencies.
      - ~/.ivy2/:/home/owner/.ivy2/
      - ~/.sbt/:/home/owner/.sbt/
    ports:
      - '9000:9000' # Play's HTTP listen port.
      - '9999:9999' # Java debugger port
      - '3333:3333' # JMX
    links:
      - postgres
      - redis
    environment:
      PLAY_HEAP_MEMORY_MB: 1700
      HOSTNAME: "localhost"
      CREATE_SITE_HOSTNAME: "localhost"
      BECOME_OWNER_EMAIL_ADDRESS: "admin@example.com"
      E2E_TEST_PASSWORD: "public"
      FORBIDDEN_PASSWORD: "public"

  # rename to cache?
  redis:
    mem_limit: 50M
    image: redis:3.0.7-alpine
    volumes:
      - ./docker/data/redis/:/data/
    ports:
      - '6379:6379'

  search:
    mem_limit: 500M
    image: elasticsearch:5.0.0-alpha3
    volumes:
      - ./docker/search/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      - ./docker/data/search/:/usr/share/elasticsearch/data/
    ports:
      - '9200:9200'
      - '9300:9300'
    environment:
      ES_JAVA_OPTS: '-Xms350m -Xmx350m'

  # rename to db?
  postgres:
    mem_limit: 200M
    build: docker/postgres/
    image: debiki/ed-postgres
    volumes:
      - ./docker/data/postgres/:/var/lib/postgresql/data/
    ports:
      - '5432:5432'
    environment:
      POSTGRES_PASSWORD: 'public'
      PEER_HOST: 'postgres2'
      PEER_PORT: '5432'
      PEER_PASSWORD: 'public2'
      CREATE_TEST_USER: 'yes'

  # An extra database, so you can experiment with Postgres replication and failover.
  # You don't need to start it.
  # rename to db2?
  #postgres2:
  #  mem_limit: 30M
  #  build: docker/postgres/
  #  volumes:
  #    - ./docker/data/postgres2/:/var/lib/postgresql/data/
  #  environment:
  #    POSTGRES_PASSWORD: 'public2'
  #    PEER_HOST: 'postgres'
  #    PEER_PORT: '5432'
  #    PEER_PASSWORD: 'public'

  gulp:
    mem_limit: 900M
    build: docker/gulp/
    volumes:
      - ./:/opt/debiki/server/

# vim: et ts=2 sw=2
